upstream mirror_game_server {
    server 127.0.0.1:27777;
    #TODO:
    #change to
    #server localhost:2$server_port
    #where 2 is just placeholder value to proxy from port xxxx to 2xxxx
}

map $request_uri $gzip_encoding {
    ~*\.gz$  "gzip";
}
map $request_uri $br_encoding {
    ~*\.br$  "br";
}
map $request_uri $type_application_octet_stream {
    ~*\.data\.(gz|br)$  "application/octet-stream";
}
map $request_uri $type_text_javascript {
    ~*\.framework.js\.(gz|br)$  "text/javascript";
}
map $request_uri $type_application_wasm {
    ~*\.wasm\.(gz|br)$  "application/wasm";
}

# Web server
server {
    server_name iimdmii.online;
    ssl_certificate /etc/letsencrypt/live/iimdmii.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/iimdmii.online/privkey.pem;

    listen       80;
    listen       443 ssl;

    if ($scheme = 'http') {
        return 301 https://$host$request_uri;
    }

    #root /var/www/html;
    root /var/www/html/ClientBuild;
    location / {
	index index.html;
    }	
   
    location ~* \.(data|framework.js|wasm)\.(gz|br)?$ {
        gzip off;
        default_type '';

        add_header Content-Encoding $gzip_encoding always;
        add_header Content-Encoding $br_encoding always;
        add_header Content-Type $type_application_octet_stream always;
        add_header Content-Type $type_text_javascript always;
        add_header Content-Type $type_application_wasm always;
    }

}

# Mirror
server 
{   
    server_name iimdmii.online;
    ssl_certificate /etc/letsencrypt/live/iimdmii.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/iimdmii.online/privkey.pem;
    
    #change to range 7000-8000
    
    listen 7777 ssl http2; 
     
    location / {
        # SSL termination; proxy to http protocol
        proxy_pass http://mirror_game_server;
        proxy_redirect off;


        proxy_read_timeout 7d;
        proxy_send_timeout 7d;
        
        # The following headers are general settings, not directly used by SWT
        # Tell upstream the host
        proxy_set_header Host $host;
        
        # Tell upstream real ip
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        #Upgrade to websokkets
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_buffer_size 2k;
        proxy_buffering off;
        
        # 10s connect timeout
        proxy_connect_timeout 10;
    }
}
